plugins {
  id 'com.android.application'
  id 'kotlin-android'
  id 'kotlin-android-extensions'
  id 'kotlin-kapt'
}

android {
  compileSdkVersion 30
  buildToolsVersion "30.0.3"

  defaultConfig {
    applicationId "com.example.myalbum"
    minSdkVersion 23
    targetSdkVersion 30
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }

    debug {
      minifyEnabled false
    }
  }

  packagingOptions {
    exclude 'META-INF/atomicfu.kotlin_module'
  }

  dataBinding {
    enabled = true
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = '1.8'
  }

  flavorDimensions "env"

  productFlavors {
    production {
      dimension "env"
    }

    staging {
      dimension "env"
    }
  }

  testOptions {
    unitTests.includeAndroidResources = true
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])

  //testImplementation 'junit:junit:4.+'
  //androidTestImplementation 'androidx.test.ext:junit:1.1.2'
  //androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

  implementation "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}"
  implementation "androidx.appcompat:appcompat:${versions.appcompat}"
  implementation "androidx.core:core-ktx:${versions.corektx}"
  implementation "com.google.android.material:material:${versions.material}"
  implementation "androidx.constraintlayout:constraintlayout:${versions.constraintlayout}"
  implementation "androidx.recyclerview:recyclerview:${versions.recyclerview}"
  implementation "androidx.cardview:cardview:${versions.cardview}"

  // Architecture Components
  implementation "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}"
  kapt "androidx.lifecycle:lifecycle-compiler:${versions.lifecycle}"
  implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}"
  //implementation "androidx.paging:paging-runtime-ktx:${versions.paging}"
  //implementation "androidx.paging:paging-rxjava2-ktx:${versions.paging}"

  // Room components
  implementation "androidx.room:room-runtime:${versions.roomVersion}"
  implementation "androidx.room:room-ktx:${versions.roomVersion}"
  kapt "androidx.room:room-compiler:${versions.roomVersion}"
  implementation "androidx.room:room-rxjava2:${versions.roomVersion}"

  // Coroutines
  api "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
  api "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"

  // Dagger 2
  implementation "com.google.dagger:dagger:${versions.dagger}"
  implementation "com.google.dagger:dagger-android-support:${versions.dagger}"
  kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
  kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"

  // RxJava
  implementation "io.reactivex.rxjava2:rxjava:${versions.rxjava}"
  implementation "io.reactivex.rxjava2:rxandroid:${versions.rxandroid}"
  implementation "io.reactivex.rxjava2:rxkotlin:${versions.rxjava}"

  // Retrofit
  implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
  implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
  implementation "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"
  implementation "com.squareup.retrofit2:converter-scalars:${versions.retrofit}"

  // Gson
  implementation "com.google.code.gson:gson:${versions.gson}"

  // Glide
  implementation "com.github.bumptech.glide:glide:${versions.glide}"
  kapt "com.github.bumptech.glide:compiler:${versions.glide}"

  // Debugging
  implementation "com.facebook.stetho:stetho:${versions.stetho}"
  implementation "com.facebook.stetho:stetho-okhttp3:${versions.stetho}"

  // Testing
  testImplementation "junit:junit:${versions.junit}"
  testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
  testImplementation 'org.mockito:mockito-inline:2.13.0'
  testImplementation("org.mockito:mockito-core:1.10.19")
  testImplementation('androidx.test:core:1.0.0')
  androidTestImplementation "com.android.support.test.espresso:espresso-core:${versions.espresso}"
  androidTestImplementation "com.android.support.test:runner:${versions.testrunner}"
  androidTestImplementation "com.android.support.test:rules:${versions.testrules}"
  androidTestImplementation "android.arch.core:core-testing:${versions.coretesting}"
  androidTestImplementation "androidx.room:room-testing:${versions.roomVersion}"
}